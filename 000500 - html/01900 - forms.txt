Forms
    > used to collect user input
    > is a container for different types of input elements, such as: text fields, checkboxes, radio buttons, submit buttons

    > input
        > is the most used form element
        > can be displayed in many ways, depending on the type attribute

    > label
        > defines a label for many form elements
        > useful for screen-reader users, because the screen-reader will read out loud the label when the user focus on the input element.
        > The for attribute of the <label> tag should be equal to the id attribute of the <input> element to bind them together

    > submit
        > defines a button for submitting the form data to a form-handler

    > attributes
        > action
            > defines the action to be performed when the form is submitted
            > If the action attribute is omitted, the action is set to the current page

        > target
            > specifies where to display the response that is received after submitting the form

        > method
            > specifies the HTTP method to be used when submitting the form data

        > novalidate
            > specifies that the form-data (input) should not be validated when submitted