AWS Lambda Overview
    > AWS EC2
        > virtual servers in the cloud
        > limited by RAM and CPU
        > continuously running
        > scaling means adding/removing server/instances

    > AWS Lambda
        > virtual functions
        > limited by the time of execution
        > run on demand
        > scaling is automated

    > benefits
        > pricing
            > pay per request and compute time
            > free tier of 1 million AWS lambda requests and 400k GB of compute time

        > integrated with the whole suit of AWS services
        > integrated with many programming languages
        > easy monitoring through AWS CloudWatch
        > easy to get more resources per functions (up to 10GB of RAM)
        > increasing the RAM will also improve CPU and network

    > Lambda main integrations
        > API gateway
            > to create a REST api
            > invoke lambda functions
        > Kniesis
            > use lambda to do some data transformation on the flight
        > DynamoDb
            > some triggers may invoke Lambda functions
        > S3
            > some triggers may invoke Lambda functions
        > CloudFront
            > Lambda at edge
        > CloudWatch Event EventBridge
            > some triggers may invoke Lambda functions
        > CloudWatch Logs
            > stream logs wherever you want
        > SNS
        > SQS
            > process messages from SQS queues
        > Cognito
            > 

    > Examples
        > Serverless thumbnail creation
            > you can create a lambda function that creates a thumbnail from a video, and stores it in another bucket
            > setup an event trigger that triggers the lambda function once a new object is uploaded

        > Serverless CRON job
            > instead of creating an EC2 instance with a cron job that runs on intervals, which is a wasted resource when it is not running
            > you can create an Automated event that fires each interval on (AWS CloudWatch Events EventBridge)
                > which invokes the lambda function

    > pricing
        > pay per call  
            > first 1m requests are for free
            > after that you pay .2$/1m request
        > pay per duration
            > 400,000 GB-seconds for free each month
                > which is
                    > 400,000 seconds if the function is 10GB
                    > 3.2m seconds if the function is 128MB
                    > after that it will cost 1$ for 600k GB-seconds

        > it is very cheap to run AWS lambda function, and that is why it is very popular