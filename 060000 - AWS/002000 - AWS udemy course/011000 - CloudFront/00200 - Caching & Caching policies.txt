Caching & Caching Policies
    > Caching
        > the cache lives in the edge locations
        > CloudFront identifies the caches at edge locations by the cache key
        > you want to maximize the cache hit ratio by minimizing the requests to the origin
        > you can invalidate part of the cache by using CreateInvalidation API

        > cache key
            > a unique identifier for every object in the cache
            > by default it consists of the 
                > hostname
                > resource portion of the url
            > you can manage the cache key by CloudFront Cache Policies

        > Cache policy
            > cache can be based on
                > http headers (none, whitelist)
                > cookies (none, whitelist, include all except, all)
                > query strings (none, whitelist, include all except, all)
            > control the TTL
                > from 0s to 1y
                > can be set by the origin by setting 
                    > cache control header
                    > expires header
            > you can use the predefined managed policies or you can create your own
            > All HTTP headers, cookies and query strings included in the cache key are automatically included in the origin request

            > Cache policy - HTTP headers  
                > none
                    > don't include any headers in the cache key
                    > headers are not forwarded to the origin (except default)
                    > best caching performance
                > whitelist
                    > only specified headers are included in the cache key
                    > specified headers are also forwarded to the origin

            > Cache policy - Query strings
                > none
                    > don't include any query strings in the cache key
                    > query strings are not forwarded to the origin (except default)
                > whitelist
                    > only specified query strings are included in the cache key
                    > specified query strings are also forwarded to the origin
                > include all except
                    > all query strings are included in the cache key except the specified list
                    > all query strings are also forwarded to the origin except the specified list
                > all
                    > all query strings are included in the cache key
                    > all query strings are also forwarded to the origin
                    > worst caching performance

            > Cache policy - cookies
                > none
                    > don't include any cookies in the cache key
                    > cookies are not forwarded to the origin (except default)
                > whitelist
                    > only specified cookies are included in the cache key
                    > specified cookies are also forwarded to the origin
                > include all except
                    > all cookies are included in the cache key except the specified list
                    > all cookies are also forwarded to the origin except the specified list
                > all
                    > all cookies are included in the cache key
                    > all cookies are also forwarded to the origin
                    > worst caching performance
        
        > Origin request policy
            > specifies the values that needs to be included in the origin request without including them in the cache key
            > you can include
                > http headers (none, whitelist)
                > cookies (none, whitelist, include all except, all)
                > query strings (none, whitelist, include all except, all)
            > ability to add new values that are not included in the original request
            > you can use the predefined managed policies or you can create your own