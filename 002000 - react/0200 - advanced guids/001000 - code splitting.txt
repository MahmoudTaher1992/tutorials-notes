Code-Splitting
    Bundling
        the process of following imported files and merging them into a single file

        tools like Webpack, Rollup or Browserify.

    Code Splitting
        as your app grows, your bundle will grow too Especially if you are including large third-party libraries

        if it so large that your app takes a long time to load

        Code-Splitting is a feature supported by bundlers like Webpack, Rollup and Browserify (via factor-bundle) which can 
        create multiple bundles that can be dynamically loaded at runtime.

        help you “lazy-load” just the things that are currently needed by the use

        dramatically improve the performance of your app

    React.lazy
        lets you render a dynamic import as a regular component.

        takes a function that must call a dynamic import(). This must return a Promise which resolves to a module 
        with a default export containing a React component.

        The lazy component should then be rendered inside a Suspense component, which allows us to show some fallback content 
        (such as a loading indicator) while we’re waiting for the lazy component to load.

        React.lazy currently only supports default exports

    Error boundaries
        If error happens during loading (i.e. network) > the error is handled here

    Route-based code splitting
        A good place to start is with routes

        Most people on the web are used to page transitions taking some amount of time to load
    